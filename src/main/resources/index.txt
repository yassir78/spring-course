- Spring in Context
* Inversion of Control and Dependency Injection
  ðŸ¥‘ With the Hollywood Principle, framework code invokes application code,
  coordinating overall workflow, rather than application code invoking framework
  code.
  ðŸ¥‘ Dependency Injection is based on Java language constructs, rather than the use of
    framework-specific interfaces. Instead of application code using framework APIs to resolve
    dependencies such as configuration parameters and collaborating objects, application
    classes expose their dependencies through methods or constructors that the framework
    can call with the appropriate values at runtime, based on configuration.
  ðŸ¥‘ Dependency Injection is a form of push configuration; the container "pushes" dependencies into application
    objects at runtime.
  ðŸ¥‘ Spring supports several types of Dependency Injection :
    ðŸŽ² Setter Injection
    ðŸŽ² Constructor Injection
    ðŸŽ² Method Injection

